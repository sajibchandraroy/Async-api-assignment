[{"D:\\web development\\Sajib Freelancer Site\\Async-api-assignment\\src\\index.js":"1","D:\\web development\\Sajib Freelancer Site\\Async-api-assignment\\src\\reportWebVitals.js":"2","D:\\web development\\Sajib Freelancer Site\\Async-api-assignment\\src\\App.js":"3","D:\\web development\\Sajib Freelancer Site\\Async-api-assignment\\src\\Home\\ApiPoller.js":"4","D:\\web development\\Sajib Freelancer Site\\Async-api-assignment\\src\\Home\\Post.js":"5","D:\\web development\\Sajib Freelancer Site\\Async-api-assignment\\src\\Home\\Home.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":206,"mtime":1608293266180,"results":"10","hashOfConfig":"8"},{"size":1418,"mtime":1608303927990,"results":"11","hashOfConfig":"8"},{"size":576,"mtime":1608303903386,"results":"12","hashOfConfig":"8"},{"size":1916,"mtime":1608303903421,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4302vt",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"D:\\web development\\Sajib Freelancer Site\\Async-api-assignment\\src\\index.js",[],"D:\\web development\\Sajib Freelancer Site\\Async-api-assignment\\src\\reportWebVitals.js",[],"D:\\web development\\Sajib Freelancer Site\\Async-api-assignment\\src\\App.js",["28"],"D:\\web development\\Sajib Freelancer Site\\Async-api-assignment\\src\\Home\\ApiPoller.js",["29","30","31","32"],"D:\\web development\\Sajib Freelancer Site\\Async-api-assignment\\src\\Home\\Post.js",[],"D:\\web development\\Sajib Freelancer Site\\Async-api-assignment\\src\\Home\\Home.js",["33","34","35","36"],"import React, { useEffect, useState } from 'react';\r\n\r\nconst Home = () => {\r\n    const [data, setData] = useState([]);\r\n\r\n    useEffect(() => {       \r\n        setInterval(fetchDatabase, 15000); \r\n        async function fetchDatabase() {\r\n            const dataLoad = fetch('https://safe-sierra-49597.herokuapp.com/data')\r\n                .then(res => res.json())\r\n                .then(data => setData(data[(data.length-1)]))\r\n                console.log(data)\r\n        }\r\n    }, []);\r\n    console.log(data)\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row mt-4\">\r\n                <div className=\"col\">\r\n                    <button type=\"button\" class=\"btn btn-outline-dark\">Users</button>\r\n                    <div class=\"card m-5\">\r\n                        <img class=\"card-img-top\" src={data.large} alt=\"Card image cap\" />\r\n                        <div class=\"card-body\">\r\n                            <h5 class=\"card-title\">{data.title + ' ' + data.first + ' ' + data.last}</h5>\r\n                            <p class=\"card-text\">{'Email: ' + data.email}</p>\r\n                            <p class=\"card-text\">{'User Name: ' + data.username}</p>\r\n                            <p class=\"card-text\">{'Password: ' + data.password}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col\">\r\n                    <button type=\"button\" class=\"btn btn-outline-dark\">Wine</button>\r\n                    <div class=\"card m-5\">\r\n                        <img class=\"card-img-top\" src={data.wineImage} alt=\"Card image cap\" />\r\n                        <div class=\"card-body\">\r\n                            <p class=\"card-text\">{'Instruction: ' + data.wineInstruction}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;",["37","38"],{"ruleId":"39","severity":1,"message":"40","line":1,"column":8,"nodeType":"41","messageId":"42","endLine":1,"endColumn":12},{"ruleId":"39","severity":1,"message":"43","line":15,"column":15,"nodeType":"41","messageId":"42","endLine":15,"endColumn":19},{"ruleId":"39","severity":1,"message":"44","line":20,"column":15,"nodeType":"41","messageId":"42","endLine":20,"endColumn":19},{"ruleId":"39","severity":1,"message":"45","line":31,"column":20,"nodeType":"41","messageId":"42","endLine":31,"endColumn":26},{"ruleId":"39","severity":1,"message":"46","line":31,"column":28,"nodeType":"41","messageId":"42","endLine":31,"endColumn":37},{"ruleId":"39","severity":1,"message":"47","line":9,"column":19,"nodeType":"41","messageId":"42","endLine":9,"endColumn":27},{"ruleId":"48","severity":1,"message":"49","line":14,"column":8,"nodeType":"50","endLine":14,"endColumn":10,"suggestions":"51"},{"ruleId":"52","severity":1,"message":"53","line":22,"column":25,"nodeType":"54","endLine":22,"endColumn":91},{"ruleId":"52","severity":1,"message":"53","line":34,"column":25,"nodeType":"54","endLine":34,"endColumn":95},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'apiU' is assigned a value but never used.","'apiW' is assigned a value but never used.","'medium' is assigned a value but never used.","'thumbnail' is assigned a value but never used.","'dataLoad' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.","ArrayExpression",["59"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-native-reassign",["60"],"no-negated-in-lhs",["61"],{"desc":"62","fix":"63"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [data]",{"range":"64","text":"65"},[463,465],"[data]"]